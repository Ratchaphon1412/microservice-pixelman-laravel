services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: sail-8.2/app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
            - kafka-nework
        depends_on:
            - mysql
            - redis
            - meilisearch
    mysql:
        image: "mysql/mysql-server:8.0"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - "sail-mysql:/var/lib/mysql"
            - "./vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "-p${DB_PASSWORD}"
            retries: 3
            timeout: 5s
    vault:
        image: vault:1.13.3
        ports:
            - "8200:8200"
        environment:
            VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN}
            VAULT_LOCAL_CONFIG: '{"storage": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
            VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
        volumes:
            - ./vault:/vault/file:rw
        entrypoint: vault server -dev -dev-root-token-id=${VAULT_TOKEN}
        networks:
            - sail
    redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "sail-redis:/data"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: "getmeili/meilisearch:latest"
        ports:
            - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
        environment:
            MEILI_NO_ANALYTICS: "${MEILISEARCH_NO_ANALYTICS:-false}"
        volumes:
            - "sail-meilisearch:/meili_data"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - "--no-verbose"
                - "--spider"
                - "http://localhost:7700/health"
            retries: 3
            timeout: 5s
    zookeeper:
        image: "bitnami/zookeeper:3.7"
        restart: always
        container_name: zookeeper
        environment:
            ALLOW_ANONYMOUS_LOGIN: "yes"
        networks:
            - kafka-nework
    # message broker - kafka
    # reference: https://github.com/bitnami/bitnami-docker-kafka/blob/master/docker-compose.yml
    kafka:
        image: "bitnami/kafka:latest"
        restart: always
        container_name: kafka
        environment:
            KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
            ALLOW_PLAINTEXT_LISTENER: "yes"

        ports:
            - "9092:9092"
        networks:
            - kafka-nework
        depends_on:
            - zookeeper
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
            - 8080:8080
        environment:
            DYNAMIC_CONFIG_ENABLED: "true"
            KAFKA_CLUSTERS_0_NAME: kafka
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

        networks:
            - kafka-nework
networks:
    sail:
        driver: bridge
    kafka-nework:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
